
I2C_Microchip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800100  000008e0  00000974  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800166  00800166  000009da  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6c  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000086a  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000063e  00000000  00000000  00001fee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  0000262c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c8  00000000  00000000  000027bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000490  00000000  00000000  00002c84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003114  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ee       	ldi	r30, 0xE0	; 224
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 36       	cpi	r26, 0x66	; 102
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e6       	ldi	r26, 0x66	; 102
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 37       	cpi	r26, 0x76	; 118
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9f 00 	call	0x13e	; 0x13e <main>
  9e:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_Slave_Init>:
   }
   if (status == 0xC8)		                         /* Last byte transmitted with ack received */
   return -3;			                               /* If yes then return -3 */
   else			                                     /* else return -4 */
   return -4;
}
  a6:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
  aa:	84 ec       	ldi	r24, 0xC4	; 196
  ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b0:	08 95       	ret

000000b2 <I2C_Slave_Listen>:
  b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b6:	88 23       	and	r24, r24
  b8:	e4 f7       	brge	.-8      	; 0xb2 <I2C_Slave_Listen>
  ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  be:	88 7f       	andi	r24, 0xF8	; 248
  c0:	80 36       	cpi	r24, 0x60	; 96
  c2:	71 f0       	breq	.+28     	; 0xe0 <I2C_Slave_Listen+0x2e>
  c4:	88 36       	cpi	r24, 0x68	; 104
  c6:	71 f0       	breq	.+28     	; 0xe4 <I2C_Slave_Listen+0x32>
  c8:	88 3a       	cpi	r24, 0xA8	; 168
  ca:	71 f0       	breq	.+28     	; 0xe8 <I2C_Slave_Listen+0x36>
  cc:	80 3b       	cpi	r24, 0xB0	; 176
  ce:	71 f0       	breq	.+28     	; 0xec <I2C_Slave_Listen+0x3a>
  d0:	80 37       	cpi	r24, 0x70	; 112
  d2:	71 f0       	breq	.+28     	; 0xf0 <I2C_Slave_Listen+0x3e>
  d4:	88 37       	cpi	r24, 0x78	; 120
  d6:	71 f0       	breq	.+28     	; 0xf4 <I2C_Slave_Listen+0x42>
  d8:	80 38       	cpi	r24, 0x80	; 128
  da:	59 f7       	brne	.-42     	; 0xb2 <I2C_Slave_Listen>
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	08 95       	ret
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	08 95       	ret
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	08 95       	ret
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	08 95       	ret
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	08 95       	ret
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	08 95       	ret
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	08 95       	ret

000000f8 <I2C_Slave_Receive>:
* i2c_slave_receive: Tar emot data från master.
******************************************************************************************/
char I2C_Slave_Receive()
{
   uint8_t status;
   TWCR = (1 << TWEN) | (1 << TWEA) | (1 << TWINT); // Aktiverar TWI, nollar interupt-flaggan och gör att master kan generera ACK.
  f8:	84 ec       	ldi	r24, 0xC4	; 196
  fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
   while (!(TWCR & (1 << TWINT)));	                // Väntar till TWI är klar.
  fe:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 102:	88 23       	and	r24, r24
 104:	e4 f7       	brge	.-8      	; 0xfe <I2C_Slave_Receive+0x6>
   status = TWSR & 0xF8;		                      // Läser av statusregistret för att välja vad som ska hända.
 106:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 10a:	88 7f       	andi	r24, 0xF8	; 248
   if (status == 0x80 || status == 0x90)            // Kollar om datan har tagits emot och returnerar ACK.
 10c:	80 38       	cpi	r24, 0x80	; 128
 10e:	11 f0       	breq	.+4      	; 0x114 <I2C_Slave_Receive+0x1c>
 110:	80 39       	cpi	r24, 0x90	; 144
 112:	19 f4       	brne	.+6      	; 0x11a <I2C_Slave_Receive+0x22>
   return TWDR;		                               // Returnerar data som tagits emot.
 114:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 118:	08 95       	ret
   if (status == 0x88 || status == 0x98)            // Kollar om datan är datan har tagits emot, NACK returnerats och ändrat till ej adresserad slave läge.
 11a:	88 38       	cpi	r24, 0x88	; 136
 11c:	11 f0       	breq	.+4      	; 0x122 <I2C_Slave_Receive+0x2a>
 11e:	88 39       	cpi	r24, 0x98	; 152
 120:	19 f4       	brne	.+6      	; 0x128 <I2C_Slave_Receive+0x30>
   return TWDR;		                               // Returnerar data som tagits emot.
 122:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 126:	08 95       	ret
   if (status == 0xA0)		                         // Kollar om stopp eller repetarad start tillstånd tagits emot.
 128:	80 3a       	cpi	r24, 0xA0	; 160
 12a:	39 f4       	brne	.+14     	; 0x13a <I2C_Slave_Receive+0x42>
   {
      TWCR |= (1 << TWINT);	                      // Nollar interupt-flaggan.
 12c:	ec eb       	ldi	r30, 0xBC	; 188
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	80 68       	ori	r24, 0x80	; 128
 134:	80 83       	st	Z, r24
      return 9;
 136:	89 e0       	ldi	r24, 0x09	; 9
 138:	08 95       	ret
   }
   else
   return -2;
 13a:	8e ef       	ldi	r24, 0xFE	; 254
}
 13c:	08 95       	ret

0000013e <main>:
static int16_t distances[3];
static int count = 0;

int main(void)
{
   serial_init();
 13e:	0e 94 1b 01 	call	0x236	; 0x236 <serial_init>
   
   I2C_Slave_Init(Slave_Address);
 142:	88 e0       	ldi	r24, 0x08	; 8
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_Slave_Init>
   
   serial_print_string("Slave Device");
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
   serial_print_new_line();
 150:	0e 94 7f 01 	call	0x2fe	; 0x2fe <serial_print_new_line>
   
   while (1)
   {
      switch(I2C_Slave_Listen())				/* Check for SLA+W or SLA+R */
 154:	0e 94 59 00 	call	0xb2	; 0xb2 <I2C_Slave_Listen>
 158:	88 23       	and	r24, r24
 15a:	21 f0       	breq	.+8      	; 0x164 <main+0x26>
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	09 f4       	brne	.+2      	; 0x162 <main+0x24>
 160:	60 c0       	rjmp	.+192    	; 0x222 <main+0xe4>
 162:	64 c0       	rjmp	.+200    	; 0x22c <main+0xee>
      {
         case 0:
         {  
            yLow = I2C_Slave_Receive();
 164:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Slave_Receive>
 168:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <yLow>
            zLow = yLow;
 16c:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <zLow>
            
            yHigh = I2C_Slave_Receive();	/* Receive data byte*/
 170:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Slave_Receive>
 174:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <yHigh>
            zHigh = ((int16_t)yHigh << 8);
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	98 2f       	mov	r25, r24
 17c:	88 27       	eor	r24, r24
 17e:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <zHigh+0x1>
 182:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <zHigh>
            
            xNew = zHigh + zLow;
 186:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <zLow>
 18a:	82 0f       	add	r24, r18
 18c:	91 1d       	adc	r25, r1
 18e:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <xNew+0x1>
 192:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <xNew>
//             serial_print_integer(xNew);
//             serial_print_new_line();
//             serial_print_new_line();
//             serial_print_new_line();
               
            distances[count] = xNew;
 196:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <__data_end>
 19a:	30 91 67 01 	lds	r19, 0x0167	; 0x800167 <__data_end+0x1>
 19e:	f9 01       	movw	r30, r18
 1a0:	ee 0f       	add	r30, r30
 1a2:	ff 1f       	adc	r31, r31
 1a4:	e8 59       	subi	r30, 0x98	; 152
 1a6:	fe 4f       	sbci	r31, 0xFE	; 254
 1a8:	91 83       	std	Z+1, r25	; 0x01
 1aa:	80 83       	st	Z, r24
            count++;
 1ac:	c9 01       	movw	r24, r18
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
 1b4:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
            if (count >= 3)
 1b8:	03 97       	sbiw	r24, 0x03	; 3
 1ba:	84 f1       	brlt	.+96     	; 0x21c <main+0xde>
            {
               count = 0;
 1bc:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <__data_end+0x1>
 1c0:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__data_end>
               serial_print_string("Left: ");
 1c4:	8d e0       	ldi	r24, 0x0D	; 13
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
               serial_print_integer(distances[0]);
 1cc:	c8 e6       	ldi	r28, 0x68	; 104
 1ce:	d1 e0       	ldi	r29, 0x01	; 1
 1d0:	68 81       	ld	r22, Y
 1d2:	79 81       	ldd	r23, Y+1	; 0x01
 1d4:	07 2e       	mov	r0, r23
 1d6:	00 0c       	add	r0, r0
 1d8:	88 0b       	sbc	r24, r24
 1da:	99 0b       	sbc	r25, r25
 1dc:	0e 94 4c 01 	call	0x298	; 0x298 <serial_print_integer>
               serial_print_string("   Center: ");
 1e0:	84 e1       	ldi	r24, 0x14	; 20
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
               serial_print_integer(distances[1]);
 1e8:	6a 81       	ldd	r22, Y+2	; 0x02
 1ea:	7b 81       	ldd	r23, Y+3	; 0x03
 1ec:	07 2e       	mov	r0, r23
 1ee:	00 0c       	add	r0, r0
 1f0:	88 0b       	sbc	r24, r24
 1f2:	99 0b       	sbc	r25, r25
 1f4:	0e 94 4c 01 	call	0x298	; 0x298 <serial_print_integer>
               serial_print_string("   Right: ");
 1f8:	80 e2       	ldi	r24, 0x20	; 32
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
               serial_print_integer(distances[2]);
 200:	6c 81       	ldd	r22, Y+4	; 0x04
 202:	7d 81       	ldd	r23, Y+5	; 0x05
 204:	07 2e       	mov	r0, r23
 206:	00 0c       	add	r0, r0
 208:	88 0b       	sbc	r24, r24
 20a:	99 0b       	sbc	r25, r25
 20c:	0e 94 4c 01 	call	0x298	; 0x298 <serial_print_integer>
               serial_print_new_line();
 210:	0e 94 7f 01 	call	0x2fe	; 0x2fe <serial_print_new_line>
               serial_print_new_line();
 214:	0e 94 7f 01 	call	0x2fe	; 0x2fe <serial_print_new_line>
               serial_print_new_line();
 218:	0e 94 7f 01 	call	0x2fe	; 0x2fe <serial_print_new_line>
            }               
            
            (void)I2C_Slave_Receive();
 21c:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Slave_Receive>
                     
            break;
 220:	99 cf       	rjmp	.-206    	; 0x154 <main+0x16>
         }
         
         case 1: // Ifall värdet från I2C_Listen får ett konstigt värde kommer switchsatsen hit.
         {
            serial_print_string("\nNot SLA+W (case 1)\n");
 222:	8b e2       	ldi	r24, 0x2B	; 43
 224:	91 e0       	ldi	r25, 0x01	; 1
 226:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
            break;
 22a:	94 cf       	rjmp	.-216    	; 0x154 <main+0x16>
         }
         
         default: // Ifall värdet från I2C_Listen får ett konstigt värde kommer switchsatsen hit.
            serial_print_string("\nNot SLA+W (default)\n");
 22c:	80 e4       	ldi	r24, 0x40	; 64
 22e:	91 e0       	ldi	r25, 0x01	; 1
 230:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
            break;
 234:	8f cf       	rjmp	.-226    	; 0x154 <main+0x16>

00000236 <serial_init>:
   }

   sprintf(s, "%ld.%ld", integer, decimal);
   serial_print_string(s);
   return;
}
 236:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <serial_initialized.1819>
 23a:	81 11       	cpse	r24, r1
 23c:	12 c0       	rjmp	.+36     	; 0x262 <serial_init+0x2c>
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 244:	86 e0       	ldi	r24, 0x06	; 6
 246:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 24a:	87 e6       	ldi	r24, 0x67	; 103
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 252:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 256:	8d e0       	ldi	r24, 0x0D	; 13
 258:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <serial_initialized.1819>
 262:	08 95       	ret

00000264 <serial_print_char>:
 264:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 268:	95 ff       	sbrs	r25, 5
 26a:	fc cf       	rjmp	.-8      	; 0x264 <serial_print_char>
 26c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 270:	08 95       	ret

00000272 <serial_print_string>:
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	ec 01       	movw	r28, r24
 278:	09 c0       	rjmp	.+18     	; 0x28c <serial_print_string+0x1a>
 27a:	0e 94 32 01 	call	0x264	; 0x264 <serial_print_char>
 27e:	88 81       	ld	r24, Y
 280:	8a 30       	cpi	r24, 0x0A	; 10
 282:	19 f4       	brne	.+6      	; 0x28a <serial_print_string+0x18>
 284:	8d e0       	ldi	r24, 0x0D	; 13
 286:	0e 94 32 01 	call	0x264	; 0x264 <serial_print_char>
 28a:	21 96       	adiw	r28, 0x01	; 1
 28c:	88 81       	ld	r24, Y
 28e:	81 11       	cpse	r24, r1
 290:	f4 cf       	rjmp	.-24     	; 0x27a <serial_print_string+0x8>
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <serial_print_integer>:
 298:	0f 93       	push	r16
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
 2a4:	64 97       	sbiw	r28, 0x14	; 20
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	f8 94       	cli
 2aa:	de bf       	out	0x3e, r29	; 62
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	cd bf       	out	0x3d, r28	; 61
 2b0:	8e 01       	movw	r16, r28
 2b2:	0f 5f       	subi	r16, 0xFF	; 255
 2b4:	1f 4f       	sbci	r17, 0xFF	; 255
 2b6:	24 e1       	ldi	r18, 0x14	; 20
 2b8:	f8 01       	movw	r30, r16
 2ba:	11 92       	st	Z+, r1
 2bc:	2a 95       	dec	r18
 2be:	e9 f7       	brne	.-6      	; 0x2ba <serial_print_integer+0x22>
 2c0:	9f 93       	push	r25
 2c2:	8f 93       	push	r24
 2c4:	7f 93       	push	r23
 2c6:	6f 93       	push	r22
 2c8:	8e e5       	ldi	r24, 0x5E	; 94
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	9f 93       	push	r25
 2ce:	8f 93       	push	r24
 2d0:	1f 93       	push	r17
 2d2:	0f 93       	push	r16
 2d4:	0e 94 84 01 	call	0x308	; 0x308 <sprintf>
 2d8:	c8 01       	movw	r24, r16
 2da:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	f8 94       	cli
 2e2:	de bf       	out	0x3e, r29	; 62
 2e4:	0f be       	out	0x3f, r0	; 63
 2e6:	cd bf       	out	0x3d, r28	; 61
 2e8:	64 96       	adiw	r28, 0x14	; 20
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	f8 94       	cli
 2ee:	de bf       	out	0x3e, r29	; 62
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	1f 91       	pop	r17
 2fa:	0f 91       	pop	r16
 2fc:	08 95       	ret

000002fe <serial_print_new_line>:
*                        att nästa utskrift ska hamna längst till vänster på
*                        nästa rad.
********************************************************************************/
void serial_print_new_line(void)
{
   serial_print_string("\n\r");
 2fe:	82 e6       	ldi	r24, 0x62	; 98
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	0e 94 39 01 	call	0x272	; 0x272 <serial_print_string>
 306:	08 95       	ret

00000308 <sprintf>:
 308:	ae e0       	ldi	r26, 0x0E	; 14
 30a:	b0 e0       	ldi	r27, 0x00	; 0
 30c:	ea e8       	ldi	r30, 0x8A	; 138
 30e:	f1 e0       	ldi	r31, 0x01	; 1
 310:	0c 94 45 04 	jmp	0x88a	; 0x88a <__prologue_saves__+0x1c>
 314:	0d 89       	ldd	r16, Y+21	; 0x15
 316:	1e 89       	ldd	r17, Y+22	; 0x16
 318:	86 e0       	ldi	r24, 0x06	; 6
 31a:	8c 83       	std	Y+4, r24	; 0x04
 31c:	1a 83       	std	Y+2, r17	; 0x02
 31e:	09 83       	std	Y+1, r16	; 0x01
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	9f e7       	ldi	r25, 0x7F	; 127
 324:	9e 83       	std	Y+6, r25	; 0x06
 326:	8d 83       	std	Y+5, r24	; 0x05
 328:	ae 01       	movw	r20, r28
 32a:	47 5e       	subi	r20, 0xE7	; 231
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	6f 89       	ldd	r22, Y+23	; 0x17
 330:	78 8d       	ldd	r23, Y+24	; 0x18
 332:	ce 01       	movw	r24, r28
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	0e 94 a6 01 	call	0x34c	; 0x34c <vfprintf>
 33a:	ef 81       	ldd	r30, Y+7	; 0x07
 33c:	f8 85       	ldd	r31, Y+8	; 0x08
 33e:	e0 0f       	add	r30, r16
 340:	f1 1f       	adc	r31, r17
 342:	10 82       	st	Z, r1
 344:	2e 96       	adiw	r28, 0x0e	; 14
 346:	e4 e0       	ldi	r30, 0x04	; 4
 348:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__epilogue_restores__+0x1c>

0000034c <vfprintf>:
 34c:	ab e0       	ldi	r26, 0x0B	; 11
 34e:	b0 e0       	ldi	r27, 0x00	; 0
 350:	ec ea       	ldi	r30, 0xAC	; 172
 352:	f1 e0       	ldi	r31, 0x01	; 1
 354:	0c 94 37 04 	jmp	0x86e	; 0x86e <__prologue_saves__>
 358:	6c 01       	movw	r12, r24
 35a:	7b 01       	movw	r14, r22
 35c:	8a 01       	movw	r16, r20
 35e:	fc 01       	movw	r30, r24
 360:	17 82       	std	Z+7, r1	; 0x07
 362:	16 82       	std	Z+6, r1	; 0x06
 364:	83 81       	ldd	r24, Z+3	; 0x03
 366:	81 ff       	sbrs	r24, 1
 368:	cc c1       	rjmp	.+920    	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 36a:	ce 01       	movw	r24, r28
 36c:	01 96       	adiw	r24, 0x01	; 1
 36e:	3c 01       	movw	r6, r24
 370:	f6 01       	movw	r30, r12
 372:	93 81       	ldd	r25, Z+3	; 0x03
 374:	f7 01       	movw	r30, r14
 376:	93 fd       	sbrc	r25, 3
 378:	85 91       	lpm	r24, Z+
 37a:	93 ff       	sbrs	r25, 3
 37c:	81 91       	ld	r24, Z+
 37e:	7f 01       	movw	r14, r30
 380:	88 23       	and	r24, r24
 382:	09 f4       	brne	.+2      	; 0x386 <vfprintf+0x3a>
 384:	ba c1       	rjmp	.+884    	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 386:	85 32       	cpi	r24, 0x25	; 37
 388:	39 f4       	brne	.+14     	; 0x398 <vfprintf+0x4c>
 38a:	93 fd       	sbrc	r25, 3
 38c:	85 91       	lpm	r24, Z+
 38e:	93 ff       	sbrs	r25, 3
 390:	81 91       	ld	r24, Z+
 392:	7f 01       	movw	r14, r30
 394:	85 32       	cpi	r24, 0x25	; 37
 396:	29 f4       	brne	.+10     	; 0x3a2 <vfprintf+0x56>
 398:	b6 01       	movw	r22, r12
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 3a0:	e7 cf       	rjmp	.-50     	; 0x370 <vfprintf+0x24>
 3a2:	91 2c       	mov	r9, r1
 3a4:	21 2c       	mov	r2, r1
 3a6:	31 2c       	mov	r3, r1
 3a8:	ff e1       	ldi	r31, 0x1F	; 31
 3aa:	f3 15       	cp	r31, r3
 3ac:	d8 f0       	brcs	.+54     	; 0x3e4 <vfprintf+0x98>
 3ae:	8b 32       	cpi	r24, 0x2B	; 43
 3b0:	79 f0       	breq	.+30     	; 0x3d0 <vfprintf+0x84>
 3b2:	38 f4       	brcc	.+14     	; 0x3c2 <vfprintf+0x76>
 3b4:	80 32       	cpi	r24, 0x20	; 32
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <vfprintf+0x8a>
 3b8:	83 32       	cpi	r24, 0x23	; 35
 3ba:	a1 f4       	brne	.+40     	; 0x3e4 <vfprintf+0x98>
 3bc:	23 2d       	mov	r18, r3
 3be:	20 61       	ori	r18, 0x10	; 16
 3c0:	1d c0       	rjmp	.+58     	; 0x3fc <vfprintf+0xb0>
 3c2:	8d 32       	cpi	r24, 0x2D	; 45
 3c4:	61 f0       	breq	.+24     	; 0x3de <vfprintf+0x92>
 3c6:	80 33       	cpi	r24, 0x30	; 48
 3c8:	69 f4       	brne	.+26     	; 0x3e4 <vfprintf+0x98>
 3ca:	23 2d       	mov	r18, r3
 3cc:	21 60       	ori	r18, 0x01	; 1
 3ce:	16 c0       	rjmp	.+44     	; 0x3fc <vfprintf+0xb0>
 3d0:	83 2d       	mov	r24, r3
 3d2:	82 60       	ori	r24, 0x02	; 2
 3d4:	38 2e       	mov	r3, r24
 3d6:	e3 2d       	mov	r30, r3
 3d8:	e4 60       	ori	r30, 0x04	; 4
 3da:	3e 2e       	mov	r3, r30
 3dc:	2a c0       	rjmp	.+84     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 3de:	f3 2d       	mov	r31, r3
 3e0:	f8 60       	ori	r31, 0x08	; 8
 3e2:	1d c0       	rjmp	.+58     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3e4:	37 fc       	sbrc	r3, 7
 3e6:	2d c0       	rjmp	.+90     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3e8:	20 ed       	ldi	r18, 0xD0	; 208
 3ea:	28 0f       	add	r18, r24
 3ec:	2a 30       	cpi	r18, 0x0A	; 10
 3ee:	40 f0       	brcs	.+16     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3f0:	8e 32       	cpi	r24, 0x2E	; 46
 3f2:	b9 f4       	brne	.+46     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3f4:	36 fc       	sbrc	r3, 6
 3f6:	81 c1       	rjmp	.+770    	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 3f8:	23 2d       	mov	r18, r3
 3fa:	20 64       	ori	r18, 0x40	; 64
 3fc:	32 2e       	mov	r3, r18
 3fe:	19 c0       	rjmp	.+50     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 400:	36 fe       	sbrs	r3, 6
 402:	06 c0       	rjmp	.+12     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 404:	8a e0       	ldi	r24, 0x0A	; 10
 406:	98 9e       	mul	r9, r24
 408:	20 0d       	add	r18, r0
 40a:	11 24       	eor	r1, r1
 40c:	92 2e       	mov	r9, r18
 40e:	11 c0       	rjmp	.+34     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 410:	ea e0       	ldi	r30, 0x0A	; 10
 412:	2e 9e       	mul	r2, r30
 414:	20 0d       	add	r18, r0
 416:	11 24       	eor	r1, r1
 418:	22 2e       	mov	r2, r18
 41a:	f3 2d       	mov	r31, r3
 41c:	f0 62       	ori	r31, 0x20	; 32
 41e:	3f 2e       	mov	r3, r31
 420:	08 c0       	rjmp	.+16     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 422:	8c 36       	cpi	r24, 0x6C	; 108
 424:	21 f4       	brne	.+8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 426:	83 2d       	mov	r24, r3
 428:	80 68       	ori	r24, 0x80	; 128
 42a:	38 2e       	mov	r3, r24
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	88 36       	cpi	r24, 0x68	; 104
 430:	41 f4       	brne	.+16     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 432:	f7 01       	movw	r30, r14
 434:	93 fd       	sbrc	r25, 3
 436:	85 91       	lpm	r24, Z+
 438:	93 ff       	sbrs	r25, 3
 43a:	81 91       	ld	r24, Z+
 43c:	7f 01       	movw	r14, r30
 43e:	81 11       	cpse	r24, r1
 440:	b3 cf       	rjmp	.-154    	; 0x3a8 <vfprintf+0x5c>
 442:	98 2f       	mov	r25, r24
 444:	9f 7d       	andi	r25, 0xDF	; 223
 446:	95 54       	subi	r25, 0x45	; 69
 448:	93 30       	cpi	r25, 0x03	; 3
 44a:	28 f4       	brcc	.+10     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 44c:	0c 5f       	subi	r16, 0xFC	; 252
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	9f e3       	ldi	r25, 0x3F	; 63
 452:	99 83       	std	Y+1, r25	; 0x01
 454:	0d c0       	rjmp	.+26     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 456:	83 36       	cpi	r24, 0x63	; 99
 458:	31 f0       	breq	.+12     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45a:	83 37       	cpi	r24, 0x73	; 115
 45c:	71 f0       	breq	.+28     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 45e:	83 35       	cpi	r24, 0x53	; 83
 460:	09 f0       	breq	.+2      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 462:	59 c0       	rjmp	.+178    	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 464:	21 c0       	rjmp	.+66     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 466:	f8 01       	movw	r30, r16
 468:	80 81       	ld	r24, Z
 46a:	89 83       	std	Y+1, r24	; 0x01
 46c:	0e 5f       	subi	r16, 0xFE	; 254
 46e:	1f 4f       	sbci	r17, 0xFF	; 255
 470:	88 24       	eor	r8, r8
 472:	83 94       	inc	r8
 474:	91 2c       	mov	r9, r1
 476:	53 01       	movw	r10, r6
 478:	13 c0       	rjmp	.+38     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 47a:	28 01       	movw	r4, r16
 47c:	f2 e0       	ldi	r31, 0x02	; 2
 47e:	4f 0e       	add	r4, r31
 480:	51 1c       	adc	r5, r1
 482:	f8 01       	movw	r30, r16
 484:	a0 80       	ld	r10, Z
 486:	b1 80       	ldd	r11, Z+1	; 0x01
 488:	36 fe       	sbrs	r3, 6
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 48c:	69 2d       	mov	r22, r9
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	02 c0       	rjmp	.+4      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 492:	6f ef       	ldi	r22, 0xFF	; 255
 494:	7f ef       	ldi	r23, 0xFF	; 255
 496:	c5 01       	movw	r24, r10
 498:	0e 94 92 03 	call	0x724	; 0x724 <strnlen>
 49c:	4c 01       	movw	r8, r24
 49e:	82 01       	movw	r16, r4
 4a0:	f3 2d       	mov	r31, r3
 4a2:	ff 77       	andi	r31, 0x7F	; 127
 4a4:	3f 2e       	mov	r3, r31
 4a6:	16 c0       	rjmp	.+44     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4a8:	28 01       	movw	r4, r16
 4aa:	22 e0       	ldi	r18, 0x02	; 2
 4ac:	42 0e       	add	r4, r18
 4ae:	51 1c       	adc	r5, r1
 4b0:	f8 01       	movw	r30, r16
 4b2:	a0 80       	ld	r10, Z
 4b4:	b1 80       	ldd	r11, Z+1	; 0x01
 4b6:	36 fe       	sbrs	r3, 6
 4b8:	03 c0       	rjmp	.+6      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4ba:	69 2d       	mov	r22, r9
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	02 c0       	rjmp	.+4      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c0:	6f ef       	ldi	r22, 0xFF	; 255
 4c2:	7f ef       	ldi	r23, 0xFF	; 255
 4c4:	c5 01       	movw	r24, r10
 4c6:	0e 94 87 03 	call	0x70e	; 0x70e <strnlen_P>
 4ca:	4c 01       	movw	r8, r24
 4cc:	f3 2d       	mov	r31, r3
 4ce:	f0 68       	ori	r31, 0x80	; 128
 4d0:	3f 2e       	mov	r3, r31
 4d2:	82 01       	movw	r16, r4
 4d4:	33 fc       	sbrc	r3, 3
 4d6:	1b c0       	rjmp	.+54     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4d8:	82 2d       	mov	r24, r2
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	88 16       	cp	r8, r24
 4de:	99 06       	cpc	r9, r25
 4e0:	b0 f4       	brcc	.+44     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4e2:	b6 01       	movw	r22, r12
 4e4:	80 e2       	ldi	r24, 0x20	; 32
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 4ec:	2a 94       	dec	r2
 4ee:	f4 cf       	rjmp	.-24     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4f0:	f5 01       	movw	r30, r10
 4f2:	37 fc       	sbrc	r3, 7
 4f4:	85 91       	lpm	r24, Z+
 4f6:	37 fe       	sbrs	r3, 7
 4f8:	81 91       	ld	r24, Z+
 4fa:	5f 01       	movw	r10, r30
 4fc:	b6 01       	movw	r22, r12
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 504:	21 10       	cpse	r2, r1
 506:	2a 94       	dec	r2
 508:	21 e0       	ldi	r18, 0x01	; 1
 50a:	82 1a       	sub	r8, r18
 50c:	91 08       	sbc	r9, r1
 50e:	81 14       	cp	r8, r1
 510:	91 04       	cpc	r9, r1
 512:	71 f7       	brne	.-36     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 514:	e8 c0       	rjmp	.+464    	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 516:	84 36       	cpi	r24, 0x64	; 100
 518:	11 f0       	breq	.+4      	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 51a:	89 36       	cpi	r24, 0x69	; 105
 51c:	41 f5       	brne	.+80     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 51e:	f8 01       	movw	r30, r16
 520:	37 fe       	sbrs	r3, 7
 522:	07 c0       	rjmp	.+14     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 524:	60 81       	ld	r22, Z
 526:	71 81       	ldd	r23, Z+1	; 0x01
 528:	82 81       	ldd	r24, Z+2	; 0x02
 52a:	93 81       	ldd	r25, Z+3	; 0x03
 52c:	0c 5f       	subi	r16, 0xFC	; 252
 52e:	1f 4f       	sbci	r17, 0xFF	; 255
 530:	08 c0       	rjmp	.+16     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 532:	60 81       	ld	r22, Z
 534:	71 81       	ldd	r23, Z+1	; 0x01
 536:	07 2e       	mov	r0, r23
 538:	00 0c       	add	r0, r0
 53a:	88 0b       	sbc	r24, r24
 53c:	99 0b       	sbc	r25, r25
 53e:	0e 5f       	subi	r16, 0xFE	; 254
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	f3 2d       	mov	r31, r3
 544:	ff 76       	andi	r31, 0x6F	; 111
 546:	3f 2e       	mov	r3, r31
 548:	97 ff       	sbrs	r25, 7
 54a:	09 c0       	rjmp	.+18     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 54c:	90 95       	com	r25
 54e:	80 95       	com	r24
 550:	70 95       	com	r23
 552:	61 95       	neg	r22
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	f0 68       	ori	r31, 0x80	; 128
 55c:	3f 2e       	mov	r3, r31
 55e:	2a e0       	ldi	r18, 0x0A	; 10
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	a3 01       	movw	r20, r6
 564:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__ultoa_invert>
 568:	88 2e       	mov	r8, r24
 56a:	86 18       	sub	r8, r6
 56c:	45 c0       	rjmp	.+138    	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 56e:	85 37       	cpi	r24, 0x75	; 117
 570:	31 f4       	brne	.+12     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 572:	23 2d       	mov	r18, r3
 574:	2f 7e       	andi	r18, 0xEF	; 239
 576:	b2 2e       	mov	r11, r18
 578:	2a e0       	ldi	r18, 0x0A	; 10
 57a:	30 e0       	ldi	r19, 0x00	; 0
 57c:	25 c0       	rjmp	.+74     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 57e:	93 2d       	mov	r25, r3
 580:	99 7f       	andi	r25, 0xF9	; 249
 582:	b9 2e       	mov	r11, r25
 584:	8f 36       	cpi	r24, 0x6F	; 111
 586:	c1 f0       	breq	.+48     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 588:	18 f4       	brcc	.+6      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 58a:	88 35       	cpi	r24, 0x58	; 88
 58c:	79 f0       	breq	.+30     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 58e:	b5 c0       	rjmp	.+362    	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 590:	80 37       	cpi	r24, 0x70	; 112
 592:	19 f0       	breq	.+6      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 594:	88 37       	cpi	r24, 0x78	; 120
 596:	21 f0       	breq	.+8      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 598:	b0 c0       	rjmp	.+352    	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 59a:	e9 2f       	mov	r30, r25
 59c:	e0 61       	ori	r30, 0x10	; 16
 59e:	be 2e       	mov	r11, r30
 5a0:	b4 fe       	sbrs	r11, 4
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5a4:	fb 2d       	mov	r31, r11
 5a6:	f4 60       	ori	r31, 0x04	; 4
 5a8:	bf 2e       	mov	r11, r31
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5ac:	34 fe       	sbrs	r3, 4
 5ae:	0a c0       	rjmp	.+20     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5b0:	29 2f       	mov	r18, r25
 5b2:	26 60       	ori	r18, 0x06	; 6
 5b4:	b2 2e       	mov	r11, r18
 5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5b8:	28 e0       	ldi	r18, 0x08	; 8
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5be:	20 e1       	ldi	r18, 0x10	; 16
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5c4:	20 e1       	ldi	r18, 0x10	; 16
 5c6:	32 e0       	ldi	r19, 0x02	; 2
 5c8:	f8 01       	movw	r30, r16
 5ca:	b7 fe       	sbrs	r11, 7
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 5ce:	60 81       	ld	r22, Z
 5d0:	71 81       	ldd	r23, Z+1	; 0x01
 5d2:	82 81       	ldd	r24, Z+2	; 0x02
 5d4:	93 81       	ldd	r25, Z+3	; 0x03
 5d6:	0c 5f       	subi	r16, 0xFC	; 252
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255
 5da:	06 c0       	rjmp	.+12     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5dc:	60 81       	ld	r22, Z
 5de:	71 81       	ldd	r23, Z+1	; 0x01
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 5f       	subi	r16, 0xFE	; 254
 5e6:	1f 4f       	sbci	r17, 0xFF	; 255
 5e8:	a3 01       	movw	r20, r6
 5ea:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__ultoa_invert>
 5ee:	88 2e       	mov	r8, r24
 5f0:	86 18       	sub	r8, r6
 5f2:	fb 2d       	mov	r31, r11
 5f4:	ff 77       	andi	r31, 0x7F	; 127
 5f6:	3f 2e       	mov	r3, r31
 5f8:	36 fe       	sbrs	r3, 6
 5fa:	0d c0       	rjmp	.+26     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 5fc:	23 2d       	mov	r18, r3
 5fe:	2e 7f       	andi	r18, 0xFE	; 254
 600:	a2 2e       	mov	r10, r18
 602:	89 14       	cp	r8, r9
 604:	58 f4       	brcc	.+22     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 606:	34 fe       	sbrs	r3, 4
 608:	0b c0       	rjmp	.+22     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 60a:	32 fc       	sbrc	r3, 2
 60c:	09 c0       	rjmp	.+18     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 60e:	83 2d       	mov	r24, r3
 610:	8e 7e       	andi	r24, 0xEE	; 238
 612:	a8 2e       	mov	r10, r24
 614:	05 c0       	rjmp	.+10     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 616:	b8 2c       	mov	r11, r8
 618:	a3 2c       	mov	r10, r3
 61a:	03 c0       	rjmp	.+6      	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 61c:	b8 2c       	mov	r11, r8
 61e:	01 c0       	rjmp	.+2      	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 620:	b9 2c       	mov	r11, r9
 622:	a4 fe       	sbrs	r10, 4
 624:	0f c0       	rjmp	.+30     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 626:	fe 01       	movw	r30, r28
 628:	e8 0d       	add	r30, r8
 62a:	f1 1d       	adc	r31, r1
 62c:	80 81       	ld	r24, Z
 62e:	80 33       	cpi	r24, 0x30	; 48
 630:	21 f4       	brne	.+8      	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 632:	9a 2d       	mov	r25, r10
 634:	99 7e       	andi	r25, 0xE9	; 233
 636:	a9 2e       	mov	r10, r25
 638:	09 c0       	rjmp	.+18     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 63a:	a2 fe       	sbrs	r10, 2
 63c:	06 c0       	rjmp	.+12     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 63e:	b3 94       	inc	r11
 640:	b3 94       	inc	r11
 642:	04 c0       	rjmp	.+8      	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 644:	8a 2d       	mov	r24, r10
 646:	86 78       	andi	r24, 0x86	; 134
 648:	09 f0       	breq	.+2      	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 64a:	b3 94       	inc	r11
 64c:	a3 fc       	sbrc	r10, 3
 64e:	11 c0       	rjmp	.+34     	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 650:	a0 fe       	sbrs	r10, 0
 652:	06 c0       	rjmp	.+12     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 654:	b2 14       	cp	r11, r2
 656:	88 f4       	brcc	.+34     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 658:	28 0c       	add	r2, r8
 65a:	92 2c       	mov	r9, r2
 65c:	9b 18       	sub	r9, r11
 65e:	0e c0       	rjmp	.+28     	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 660:	b2 14       	cp	r11, r2
 662:	60 f4       	brcc	.+24     	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 664:	b6 01       	movw	r22, r12
 666:	80 e2       	ldi	r24, 0x20	; 32
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 66e:	b3 94       	inc	r11
 670:	f7 cf       	rjmp	.-18     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 672:	b2 14       	cp	r11, r2
 674:	18 f4       	brcc	.+6      	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 676:	2b 18       	sub	r2, r11
 678:	02 c0       	rjmp	.+4      	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
 67a:	98 2c       	mov	r9, r8
 67c:	21 2c       	mov	r2, r1
 67e:	a4 fe       	sbrs	r10, 4
 680:	10 c0       	rjmp	.+32     	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 682:	b6 01       	movw	r22, r12
 684:	80 e3       	ldi	r24, 0x30	; 48
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 68c:	a2 fe       	sbrs	r10, 2
 68e:	17 c0       	rjmp	.+46     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 690:	a1 fc       	sbrc	r10, 1
 692:	03 c0       	rjmp	.+6      	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 694:	88 e7       	ldi	r24, 0x78	; 120
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 69a:	88 e5       	ldi	r24, 0x58	; 88
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	b6 01       	movw	r22, r12
 6a0:	0c c0       	rjmp	.+24     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 6a2:	8a 2d       	mov	r24, r10
 6a4:	86 78       	andi	r24, 0x86	; 134
 6a6:	59 f0       	breq	.+22     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6a8:	a1 fe       	sbrs	r10, 1
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6ac:	8b e2       	ldi	r24, 0x2B	; 43
 6ae:	01 c0       	rjmp	.+2      	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	a7 fc       	sbrc	r10, 7
 6b4:	8d e2       	ldi	r24, 0x2D	; 45
 6b6:	b6 01       	movw	r22, r12
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 6be:	89 14       	cp	r8, r9
 6c0:	38 f4       	brcc	.+14     	; 0x6d0 <__EEPROM_REGION_LENGTH__+0x2d0>
 6c2:	b6 01       	movw	r22, r12
 6c4:	80 e3       	ldi	r24, 0x30	; 48
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 6cc:	9a 94       	dec	r9
 6ce:	f7 cf       	rjmp	.-18     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6d0:	8a 94       	dec	r8
 6d2:	f3 01       	movw	r30, r6
 6d4:	e8 0d       	add	r30, r8
 6d6:	f1 1d       	adc	r31, r1
 6d8:	80 81       	ld	r24, Z
 6da:	b6 01       	movw	r22, r12
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 6e2:	81 10       	cpse	r8, r1
 6e4:	f5 cf       	rjmp	.-22     	; 0x6d0 <__EEPROM_REGION_LENGTH__+0x2d0>
 6e6:	22 20       	and	r2, r2
 6e8:	09 f4       	brne	.+2      	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 6ea:	42 ce       	rjmp	.-892    	; 0x370 <vfprintf+0x24>
 6ec:	b6 01       	movw	r22, r12
 6ee:	80 e2       	ldi	r24, 0x20	; 32
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	0e 94 9d 03 	call	0x73a	; 0x73a <fputc>
 6f6:	2a 94       	dec	r2
 6f8:	f6 cf       	rjmp	.-20     	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 6fa:	f6 01       	movw	r30, r12
 6fc:	86 81       	ldd	r24, Z+6	; 0x06
 6fe:	97 81       	ldd	r25, Z+7	; 0x07
 700:	02 c0       	rjmp	.+4      	; 0x706 <__EEPROM_REGION_LENGTH__+0x306>
 702:	8f ef       	ldi	r24, 0xFF	; 255
 704:	9f ef       	ldi	r25, 0xFF	; 255
 706:	2b 96       	adiw	r28, 0x0b	; 11
 708:	e2 e1       	ldi	r30, 0x12	; 18
 70a:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__epilogue_restores__>

0000070e <strnlen_P>:
 70e:	fc 01       	movw	r30, r24
 710:	05 90       	lpm	r0, Z+
 712:	61 50       	subi	r22, 0x01	; 1
 714:	70 40       	sbci	r23, 0x00	; 0
 716:	01 10       	cpse	r0, r1
 718:	d8 f7       	brcc	.-10     	; 0x710 <strnlen_P+0x2>
 71a:	80 95       	com	r24
 71c:	90 95       	com	r25
 71e:	8e 0f       	add	r24, r30
 720:	9f 1f       	adc	r25, r31
 722:	08 95       	ret

00000724 <strnlen>:
 724:	fc 01       	movw	r30, r24
 726:	61 50       	subi	r22, 0x01	; 1
 728:	70 40       	sbci	r23, 0x00	; 0
 72a:	01 90       	ld	r0, Z+
 72c:	01 10       	cpse	r0, r1
 72e:	d8 f7       	brcc	.-10     	; 0x726 <strnlen+0x2>
 730:	80 95       	com	r24
 732:	90 95       	com	r25
 734:	8e 0f       	add	r24, r30
 736:	9f 1f       	adc	r25, r31
 738:	08 95       	ret

0000073a <fputc>:
 73a:	0f 93       	push	r16
 73c:	1f 93       	push	r17
 73e:	cf 93       	push	r28
 740:	df 93       	push	r29
 742:	fb 01       	movw	r30, r22
 744:	23 81       	ldd	r18, Z+3	; 0x03
 746:	21 fd       	sbrc	r18, 1
 748:	03 c0       	rjmp	.+6      	; 0x750 <fputc+0x16>
 74a:	8f ef       	ldi	r24, 0xFF	; 255
 74c:	9f ef       	ldi	r25, 0xFF	; 255
 74e:	2c c0       	rjmp	.+88     	; 0x7a8 <fputc+0x6e>
 750:	22 ff       	sbrs	r18, 2
 752:	16 c0       	rjmp	.+44     	; 0x780 <fputc+0x46>
 754:	46 81       	ldd	r20, Z+6	; 0x06
 756:	57 81       	ldd	r21, Z+7	; 0x07
 758:	24 81       	ldd	r18, Z+4	; 0x04
 75a:	35 81       	ldd	r19, Z+5	; 0x05
 75c:	42 17       	cp	r20, r18
 75e:	53 07       	cpc	r21, r19
 760:	44 f4       	brge	.+16     	; 0x772 <fputc+0x38>
 762:	a0 81       	ld	r26, Z
 764:	b1 81       	ldd	r27, Z+1	; 0x01
 766:	9d 01       	movw	r18, r26
 768:	2f 5f       	subi	r18, 0xFF	; 255
 76a:	3f 4f       	sbci	r19, 0xFF	; 255
 76c:	31 83       	std	Z+1, r19	; 0x01
 76e:	20 83       	st	Z, r18
 770:	8c 93       	st	X, r24
 772:	26 81       	ldd	r18, Z+6	; 0x06
 774:	37 81       	ldd	r19, Z+7	; 0x07
 776:	2f 5f       	subi	r18, 0xFF	; 255
 778:	3f 4f       	sbci	r19, 0xFF	; 255
 77a:	37 83       	std	Z+7, r19	; 0x07
 77c:	26 83       	std	Z+6, r18	; 0x06
 77e:	14 c0       	rjmp	.+40     	; 0x7a8 <fputc+0x6e>
 780:	8b 01       	movw	r16, r22
 782:	ec 01       	movw	r28, r24
 784:	fb 01       	movw	r30, r22
 786:	00 84       	ldd	r0, Z+8	; 0x08
 788:	f1 85       	ldd	r31, Z+9	; 0x09
 78a:	e0 2d       	mov	r30, r0
 78c:	09 95       	icall
 78e:	89 2b       	or	r24, r25
 790:	e1 f6       	brne	.-72     	; 0x74a <fputc+0x10>
 792:	d8 01       	movw	r26, r16
 794:	16 96       	adiw	r26, 0x06	; 6
 796:	8d 91       	ld	r24, X+
 798:	9c 91       	ld	r25, X
 79a:	17 97       	sbiw	r26, 0x07	; 7
 79c:	01 96       	adiw	r24, 0x01	; 1
 79e:	17 96       	adiw	r26, 0x07	; 7
 7a0:	9c 93       	st	X, r25
 7a2:	8e 93       	st	-X, r24
 7a4:	16 97       	sbiw	r26, 0x06	; 6
 7a6:	ce 01       	movw	r24, r28
 7a8:	df 91       	pop	r29
 7aa:	cf 91       	pop	r28
 7ac:	1f 91       	pop	r17
 7ae:	0f 91       	pop	r16
 7b0:	08 95       	ret

000007b2 <__ultoa_invert>:
 7b2:	fa 01       	movw	r30, r20
 7b4:	aa 27       	eor	r26, r26
 7b6:	28 30       	cpi	r18, 0x08	; 8
 7b8:	51 f1       	breq	.+84     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7ba:	20 31       	cpi	r18, 0x10	; 16
 7bc:	81 f1       	breq	.+96     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7be:	e8 94       	clt
 7c0:	6f 93       	push	r22
 7c2:	6e 7f       	andi	r22, 0xFE	; 254
 7c4:	6e 5f       	subi	r22, 0xFE	; 254
 7c6:	7f 4f       	sbci	r23, 0xFF	; 255
 7c8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ca:	9f 4f       	sbci	r25, 0xFF	; 255
 7cc:	af 4f       	sbci	r26, 0xFF	; 255
 7ce:	b1 e0       	ldi	r27, 0x01	; 1
 7d0:	3e d0       	rcall	.+124    	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 7d2:	b4 e0       	ldi	r27, 0x04	; 4
 7d4:	3c d0       	rcall	.+120    	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 7d6:	67 0f       	add	r22, r23
 7d8:	78 1f       	adc	r23, r24
 7da:	89 1f       	adc	r24, r25
 7dc:	9a 1f       	adc	r25, r26
 7de:	a1 1d       	adc	r26, r1
 7e0:	68 0f       	add	r22, r24
 7e2:	79 1f       	adc	r23, r25
 7e4:	8a 1f       	adc	r24, r26
 7e6:	91 1d       	adc	r25, r1
 7e8:	a1 1d       	adc	r26, r1
 7ea:	6a 0f       	add	r22, r26
 7ec:	71 1d       	adc	r23, r1
 7ee:	81 1d       	adc	r24, r1
 7f0:	91 1d       	adc	r25, r1
 7f2:	a1 1d       	adc	r26, r1
 7f4:	20 d0       	rcall	.+64     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 7f6:	09 f4       	brne	.+2      	; 0x7fa <__ultoa_invert+0x48>
 7f8:	68 94       	set
 7fa:	3f 91       	pop	r19
 7fc:	2a e0       	ldi	r18, 0x0A	; 10
 7fe:	26 9f       	mul	r18, r22
 800:	11 24       	eor	r1, r1
 802:	30 19       	sub	r19, r0
 804:	30 5d       	subi	r19, 0xD0	; 208
 806:	31 93       	st	Z+, r19
 808:	de f6       	brtc	.-74     	; 0x7c0 <__ultoa_invert+0xe>
 80a:	cf 01       	movw	r24, r30
 80c:	08 95       	ret
 80e:	46 2f       	mov	r20, r22
 810:	47 70       	andi	r20, 0x07	; 7
 812:	40 5d       	subi	r20, 0xD0	; 208
 814:	41 93       	st	Z+, r20
 816:	b3 e0       	ldi	r27, 0x03	; 3
 818:	0f d0       	rcall	.+30     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 81a:	c9 f7       	brne	.-14     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 81c:	f6 cf       	rjmp	.-20     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 81e:	46 2f       	mov	r20, r22
 820:	4f 70       	andi	r20, 0x0F	; 15
 822:	40 5d       	subi	r20, 0xD0	; 208
 824:	4a 33       	cpi	r20, 0x3A	; 58
 826:	18 f0       	brcs	.+6      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 828:	49 5d       	subi	r20, 0xD9	; 217
 82a:	31 fd       	sbrc	r19, 1
 82c:	40 52       	subi	r20, 0x20	; 32
 82e:	41 93       	st	Z+, r20
 830:	02 d0       	rcall	.+4      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 832:	a9 f7       	brne	.-22     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 834:	ea cf       	rjmp	.-44     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 836:	b4 e0       	ldi	r27, 0x04	; 4
 838:	a6 95       	lsr	r26
 83a:	97 95       	ror	r25
 83c:	87 95       	ror	r24
 83e:	77 95       	ror	r23
 840:	67 95       	ror	r22
 842:	ba 95       	dec	r27
 844:	c9 f7       	brne	.-14     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 846:	00 97       	sbiw	r24, 0x00	; 0
 848:	61 05       	cpc	r22, r1
 84a:	71 05       	cpc	r23, r1
 84c:	08 95       	ret
 84e:	9b 01       	movw	r18, r22
 850:	ac 01       	movw	r20, r24
 852:	0a 2e       	mov	r0, r26
 854:	06 94       	lsr	r0
 856:	57 95       	ror	r21
 858:	47 95       	ror	r20
 85a:	37 95       	ror	r19
 85c:	27 95       	ror	r18
 85e:	ba 95       	dec	r27
 860:	c9 f7       	brne	.-14     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 862:	62 0f       	add	r22, r18
 864:	73 1f       	adc	r23, r19
 866:	84 1f       	adc	r24, r20
 868:	95 1f       	adc	r25, r21
 86a:	a0 1d       	adc	r26, r0
 86c:	08 95       	ret

0000086e <__prologue_saves__>:
 86e:	2f 92       	push	r2
 870:	3f 92       	push	r3
 872:	4f 92       	push	r4
 874:	5f 92       	push	r5
 876:	6f 92       	push	r6
 878:	7f 92       	push	r7
 87a:	8f 92       	push	r8
 87c:	9f 92       	push	r9
 87e:	af 92       	push	r10
 880:	bf 92       	push	r11
 882:	cf 92       	push	r12
 884:	df 92       	push	r13
 886:	ef 92       	push	r14
 888:	ff 92       	push	r15
 88a:	0f 93       	push	r16
 88c:	1f 93       	push	r17
 88e:	cf 93       	push	r28
 890:	df 93       	push	r29
 892:	cd b7       	in	r28, 0x3d	; 61
 894:	de b7       	in	r29, 0x3e	; 62
 896:	ca 1b       	sub	r28, r26
 898:	db 0b       	sbc	r29, r27
 89a:	0f b6       	in	r0, 0x3f	; 63
 89c:	f8 94       	cli
 89e:	de bf       	out	0x3e, r29	; 62
 8a0:	0f be       	out	0x3f, r0	; 63
 8a2:	cd bf       	out	0x3d, r28	; 61
 8a4:	09 94       	ijmp

000008a6 <__epilogue_restores__>:
 8a6:	2a 88       	ldd	r2, Y+18	; 0x12
 8a8:	39 88       	ldd	r3, Y+17	; 0x11
 8aa:	48 88       	ldd	r4, Y+16	; 0x10
 8ac:	5f 84       	ldd	r5, Y+15	; 0x0f
 8ae:	6e 84       	ldd	r6, Y+14	; 0x0e
 8b0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8b2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8b4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8b6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8b8:	b9 84       	ldd	r11, Y+9	; 0x09
 8ba:	c8 84       	ldd	r12, Y+8	; 0x08
 8bc:	df 80       	ldd	r13, Y+7	; 0x07
 8be:	ee 80       	ldd	r14, Y+6	; 0x06
 8c0:	fd 80       	ldd	r15, Y+5	; 0x05
 8c2:	0c 81       	ldd	r16, Y+4	; 0x04
 8c4:	1b 81       	ldd	r17, Y+3	; 0x03
 8c6:	aa 81       	ldd	r26, Y+2	; 0x02
 8c8:	b9 81       	ldd	r27, Y+1	; 0x01
 8ca:	ce 0f       	add	r28, r30
 8cc:	d1 1d       	adc	r29, r1
 8ce:	0f b6       	in	r0, 0x3f	; 63
 8d0:	f8 94       	cli
 8d2:	de bf       	out	0x3e, r29	; 62
 8d4:	0f be       	out	0x3f, r0	; 63
 8d6:	cd bf       	out	0x3d, r28	; 61
 8d8:	ed 01       	movw	r28, r26
 8da:	08 95       	ret

000008dc <_exit>:
 8dc:	f8 94       	cli

000008de <__stop_program>:
 8de:	ff cf       	rjmp	.-2      	; 0x8de <__stop_program>
